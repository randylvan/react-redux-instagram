{
  "_args": [
    [
      {
        "raw": "expect-jsx@^2.5.1",
        "scope": null,
        "escapedName": "expect-jsx",
        "name": "expect-jsx",
        "rawSpec": "^2.5.1",
        "spec": ">=2.5.1 <3.0.0",
        "type": "range"
      },
      "/Users/rvan/learn-redux"
    ]
  ],
  "_from": "expect-jsx@>=2.5.1 <3.0.0",
  "_id": "expect-jsx@2.6.0",
  "_inCache": true,
  "_location": "/expect-jsx",
  "_nodeVersion": "5.11.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/expect-jsx-2.6.0.tgz_1465239610558_0.7303947512991726"
  },
  "_npmUser": {
    "name": "vvo",
    "email": "vincent.voyer@gmail.com"
  },
  "_npmVersion": "2.15.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "expect-jsx@^2.5.1",
    "scope": null,
    "escapedName": "expect-jsx",
    "name": "expect-jsx",
    "rawSpec": "^2.5.1",
    "spec": ">=2.5.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/expect-jsx/-/expect-jsx-2.6.0.tgz",
  "_shasum": "43f484828077d3942464421205b78c75b9791e6b",
  "_shrinkwrap": null,
  "_spec": "expect-jsx@^2.5.1",
  "_where": "/Users/rvan/learn-redux",
  "author": {
    "name": "Algolia",
    "email": "support@algolia.com",
    "url": "https://github.com/algolia/"
  },
  "bugs": {
    "url": "https://github.com/algolia/expect-jsx/issues"
  },
  "dependencies": {
    "collapse-white-space": "^1.0.0",
    "react": "^0.14.8 || ^15.0.1",
    "react-element-to-jsx-string": "^3.0.0"
  },
  "description": "toEqualJSX for mjackson/expect",
  "devDependencies": {
    "babel": "^5.8.29",
    "babel-eslint": "^4.1.8",
    "eslint": "^1.10.3",
    "eslint-config-airbnb": "^1.0.0",
    "eslint-config-algolia": "^4.6.0",
    "eslint-plugin-algolia": "^1.5.0",
    "eslint-plugin-react": "^4.2.3",
    "expect": "^1.14.0",
    "mocha": "^2.4.5",
    "react": "^15.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "43f484828077d3942464421205b78c75b9791e6b",
    "tarball": "https://registry.npmjs.org/expect-jsx/-/expect-jsx-2.6.0.tgz"
  },
  "gitHead": "919a766fcd15f12d95fc80640dbfee96e3dfd5d1",
  "homepage": "https://github.com/algolia/expect-jsx#readme",
  "keywords": [
    "expect",
    "expect-extension"
  ],
  "license": "MIT",
  "main": "index-dist.js",
  "maintainers": [
    {
      "name": "vvo",
      "email": "vincent.voyer@gmail.com"
    }
  ],
  "name": "expect-jsx",
  "optionalDependencies": {},
  "peerDependencies": {
    "expect": "^1.0.0"
  },
  "readme": "# expect-jsx\n\n[![Version][version-svg]][package-url] [![Build Status][travis-svg]][travis-url] [![License][license-image]][license-url] [![Downloads][downloads-image]][downloads-url]\n\n[travis-svg]: https://img.shields.io/travis/algolia/expect-jsx/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/algolia/expect-jsx\n[license-image]: http://img.shields.io/badge/license-MIT-green.svg?style=flat-square\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/expect-jsx.svg?style=flat-square\n[downloads-url]: http://npm-stat.com/charts.html?package=expect-jsx\n[version-svg]: https://img.shields.io/npm/v/expect-jsx.svg?style=flat-square\n[package-url]: https://npmjs.org/package/expect-jsx\n[screenshot]: ./screenshot.png\n\ntoEqualJSX for [mjackson/expect](https://github.com/mjackson/expect).\n\nIt uses [algolia/react-element-to-jsx-string](https://github.com/algolia/react-element-to-jsx-string) in the background to turn React elements into formatted strings.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**  *generated with [DocToc](https://github.com/thlorenz/doctoc)*\n\n- [Setup](#setup)\n- [API](#api)\n- [Usage](#usage)\n- [A note about functions](#a-note-about-functions)\n- [Test](#test)\n- [Build](#build)\n- [Similar projects](#similar-projects)\n- [Thanks](#thanks)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Setup\n\nYou will most probably use this plugin as a development dependency.\n\n```sh\nnpm install expect-jsx --save-dev\n```\n\n## API\n\n- expect(ReactComponent|JSX).toEqualJSX(ReactComponent|JSX)\n- expect(ReactComponent|JSX).toNotEqualJSX(ReactComponent|JSX)\n- expect(ReactComponent|JSX).toIncludeJSX(ReactComponent|JSX)\n- expect(ReactComponent|JSX).toNotIncludeJSX(ReactComponent|JSX)\n\n## Usage\n\nHere's an example using [mochajs/mocha](https://github.com/mochajs/mocha).\n\n```js\nimport React from 'react';\nimport expect from 'expect';\nimport expectJSX from 'expect-jsx';\n\nexpect.extend(expectJSX);\n\nclass TestComponent extends React.Component {}\n\ndescribe('expect-jsx', () => {\n  it('works', () => {\n    expect(<div />).toEqualJSX(<div />);\n    // ok\n\n    expect(<div a=\"1\" b=\"2\" />).toEqualJSX(<div />);\n    // Error: Expected '<div\\n  a=\"1\"\\n  b=\"2\"\\n/>' to equal '<div />'\n\n    expect(<span />).toNotEqualJSX(<div/>);\n    // ok\n\n    expect(<div><TestComponent /></div>).toIncludeJSX(<TestComponent />);\n    // ok\n  });\n});\n```\n\nIt looks like this when ran:\n\n![Screenshot when using mocha][screenshot]\n\n## A note about functions\n\n`toEqualJSX` will not check for function references, it only checks that if a `function` was\nexpected somewhere, there's also a function in the actual data.\n\nIt's your responsibility to then unit test those functions.\n\n## Test\n\n```sh\nnpm test\nnpm run test:watch\n```\n\n## Build\n\n```sh\nnpm run build\nnpm run build:watch\n```\n\n## Similar projects\n\nThere are multiple similar projects for other assertions libraries, all based on\n[algolia/react-element-to-jsx-string](https://github.com/algolia/react-element-to-jsx-string).\nFor instance:\n\n* [chai-equal-jsx](https://www.npmjs.com/package/chai-equal-jsx), assertions for chai:\n  `expect(<div />).to.equalJSX(<div />);`\n* [chai-jsx](https://www.npmjs.com/package/chai-jsx), assertions for chai:\n  `expect(<div />).jsx.to.equal(<div />);`\n* [jsx-chai](https://github.com/bkonkle/jsx-chai), assertions for chai:\n  `expect(<div />).to.deep.equal(<div />);`\n* [tape-jsx-equals](https://www.npmjs.com/package/tape-jsx-equals), assertions for tape:\n  `t.jsxEquals(<div />, <div />);`\n* [jasmine-expect-jsx](https://www.npmjs.com/package/jasmine-expect-jsx), assertions for jasmine:\n  `expect(<div />).toEqualJSX(<div />);`\n\n## Thanks\n\nTo the people pointing me in the right directions like:\n- https://github.com/facebook/react/issues/4835\n- https://github.com/mjackson/expect/issues/37\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/algolia/expect-jsx.git"
  },
  "scripts": {
    "build": "babel index.js -o index-dist.js",
    "build:watch": "babel index.js -o index-dist.js -w",
    "prepublish": "npm run build",
    "test": "mocha --opts mocha.opts && eslint .",
    "test:watch": "mocha --opts mocha.opts --watch --reporter min"
  },
  "version": "2.6.0"
}
